name: AWS DEPLOY TO PRODUCTION

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  aws-deploy:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PW: ${{ secrets.DB_PW}}
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SECURE: false
      SMTP_USER: oneapp@chefscholars.org
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      ACCT_PASS: ${{ secrets.ACCT_PASS }}
      SMTP_FROM: oneapp@chefscholars.org
      FRONTEND_URL: https://oneapp.chefscholars.org/

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - uses: actions/setup-node@v4
        with:
          node-version: 20.11.0
      - run: npm install

      - run: |
          touch .env
          echo DB_HOST = "$DB_HOST" >> .env
          echo DB_PW = "$DB_PW" >> .env
          echo DB_USER = "$DB_USER" >> .env
          echo DB_NAME = "$DB_NAME" >> .env
          echo SECRET_KEY = "$SECRET_KEY" >> .env
          echo SMTP_HOST = "$SMTP_HOST" >> .env
          echo SMTP_PORT = "$SMTP_PORT" >> .env
          echo SMTP_SECURE = "$SMTP_SECURE" >> .env
          echo SMTP_USER = "$SMTP_USER" >> .env
          echo SMTP_PASS = "$SMTP_PASS" >> .env
          echo ACCT_PASS = "$ACCT_PASS" >> .env
          echo SMTP_FROM = "$SMTP_FROM" >> .env
      - run: npm run bundle
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: "oneapp.chefscholars.org"
          REMOTE_USER: ubuntu
          TARGET: "nodeapps/one-app-backend"
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "deploy/"
      - name: Execute SSH commmands on remote server
        uses: JimCronqvist/action-ssh@master
        env:
          NAME: "Root"
        with:
          hosts: "ubuntu@oneapp.chefscholars.org:22"
          privateKey: ${{ secrets.SERVER_SSH_KEY }}
          debug: false
          command: |
            cd nodeapps/one-app-backend
            npm install
            sudo systemctl stop one-app-backend
            sudo cp one-app-backend.service /lib/systemd/system/one-app-backend.service
            sudo systemctl daemon-reload
            sudo systemctl start one-app-backend
